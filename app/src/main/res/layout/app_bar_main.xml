<?xml version="1.0" encoding="utf-8"?>
<!--
CoordinatorLayout
FrameLayout 에 기반을 둔 layout 이다.
Layout 클래스는 자신만의 배치 기능에 따라서 Layout에 포함된 다양한 View 위젯을 화면에
정렬할 때 사용합니다. 그런데 화면에 View 위젯을 표시함에 있어서 주 목적이 다른 Layout 클래스가
있는데 이 Layout 이 FrameLayout 이다.

FrmaeLayout 은 자식으로 추가된 여러 view 위젯중에 하나를 Layout 전면에 표시할 때 사용하는 클래스
입니다. Frame 이란 액자를 의미하고 액자에 사진을 교체 하면서 볼수 있듯이 FrameLayout의
주용도는 액자 처럼 화면에 표시될 View를 바꿔서 보여 주는 것 이 주목적이다.

FrameLayout이 하나의 자식(Child) 뷰 위젯을 전면에 표시할 때 사용된다고 해도,
오직 하나의 자식(Child) 뷰 위젯만 가질 수 있다거나, 전면에 표시되는 뷰(View) 외의
다른 뷰(View)가 아예 표시조차 되지 않는 것은 아닙니다.
보통 "액자(Frame)"에도 액자 크기만한 큰 사진 앞에 작은 사진들을 끼워서 사용하는 경우가 있죠.
마찬가지로 FrameLayout에도 다양한 크기의 뷰(View) 위젯들을 추가할 수 있습니다.

최초 FrameLayout이 화면에 그려질 때 전면에 표시되는 뷰(View) 위젯은
레이아웃 XML 코드의 가장 마지막에 추가된 뷰(View) 위젯입니다.
즉, "액자(Frame)"에 그림을 끼우면 젤 앞에 끼워진 그림이 전면에 보여지듯이,
FrameLayout에 가장 마지막으로 추가된 자식(Children) 뷰 위젯이 화면의 전면에 표시되는 것이죠.
그리고 FrameLayout에 추가되는 자식(Children)들은 뒤에서부터 앞으로 쌓이면서 그려지기 때문에,
전면에 표시되는 뷰(View)의 크기가 다른 뷰(View)보다 작으면,
먼저 추가된 뷰(View)의 일부가 화면에 보여지게 됩니다

하지만 안드로이드에서는,
여러 뷰(View)를 동시에 표시해야 하는 명확한 의도가 없는 한,
FrameLayout이 오직 하나의 자식(Child) 뷰 위젯만을 표시하게 만들도록 권고하고 있습니다.
자식(Children) 뷰들이 서로 겹치지 않으면서, 다양한 화면 크기에 따라 스케일될 수 있는(scalable) UI를
구성하기가 어렵기 때문입니다.

그럼 다시 CoordinatorLayout 으로 돌아와서 살펴보자
FrameLayout 에 기반을 둔 Layout으로 2개의 주요기능이 있다.
1.최상위 Decor view 로서 사용
2.자식 뷰들간의 인터렉션을 위한 컨테이너로서 사용

보통 CoordinatorLayout 은 스크롤 이벤트에 따라서 상단 App bar 에 변화를 줄때 사용한다.
스크롤 할때 App bar 의 크기가 변경되는 효과를 줄 경우 이 Layout을 사용한다.
아래에서 보면 app bar 에 관련된 Layout이 포함되어져 있는것을 확인 할 수 있다.

잠시 속성에 대해서 알아보자
?attr/colorPrimary
안드로이드에서 사용되는 테마 속성을 나타내는 표현이다. themes 폴더에 값들이 정의 되어져있다.
-->
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <com.google.android.material.appbar.AppBarLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:theme="@style/Theme.AudioRecoderExample.AppBarOverlay">

        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            android:background="?attr/colorPrimary"
            app:popupTheme="@style/Theme.AudioRecoderExample.PopupOverlay" />

    </com.google.android.material.appbar.AppBarLayout>

    <include layout="@layout/content_main" />

    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/fab"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom|end"
        android:layout_marginEnd="@dimen/fab_margin"
        android:layout_marginBottom="16dp"
        app:srcCompat="@drawable/baseline_record_voice_over_24" />





</androidx.coordinatorlayout.widget.CoordinatorLayout>