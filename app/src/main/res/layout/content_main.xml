<?xml version="1.0" encoding="utf-8"?>

<!--
view 위젯의 위치와 크기를 유연하게 조절할 수 있게 만들어 주는 레이아웃
자신 위에 배치되는 view 위젯에 여러 제약(Constraint)를 적용하여 각 view 의 이치와 크기를
결정해 줍니다. (view 위젯은 botton / textbox / 아래와 같이 fragment 자체가 올수도 있다.)

기본 속성 사용법을 보면
layout_constraintXXX (XXX = 구제적인 제약 조건)
    app:layout_constraintLeft_toLeftOf="parent"
    app:layout_constraintRight_toRightOf="parent"
    app:layout_constraintTop_toTopOf="parent"
이게 제약 조건이다. 부모에 꼭차게 끔 fragment를 유지 한다는 의미이다.

현재 constraintlay 안에 하나의 fragment 가 존재하고 있다.

현재 속성이 NavHost라고 되어 있다. 즉 아래에 존재하는 fragment는 Navgrah로 연결된 각 화면을 보여줄
컨테이너뷰라고 보면 된다. 따라서
-->
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:showIn="@layout/app_bar_main">

    <fragment
        android:id="@+id/nav_host_fragment_content_main"
        android:name="androidx.navigation.fragment.NavHostFragment"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:defaultNavHost="true"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:navGraph="@navigation/mobile_navigation" />




</androidx.constraintlayout.widget.ConstraintLayout>